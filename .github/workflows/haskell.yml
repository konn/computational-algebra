on: [push, pull_request]
name: build

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ghc:
        - 8.10.7
        - 9.0.1
      fail-fast: false
    name: Build ${{ matrix.ghc }}
    env:
      STACK_YAML: stack-${{matrix.ghc}}.yaml
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies (apt)
      run: |
        sudo apt-get update -y -qq && sudo apt-get install -y -qq wget
        wget ftp://jim.mathematik.uni-kl.de/repo/extra/gpg && sudo apt-key add gpg && rm gpg
        echo 'Dir::Bin::Methods::ftp "ftp";' | sudo tee -a /etc/apt/apt.conf.d/99local-ftp
        sudo touch /etc/apt/sources.list.d/singular.list
        echo "deb ftp://jim.mathematik.uni-kl.de/repo/ubuntu20 focal main" | sudo tee -a /etc/apt/sources.list.d/singular.list
        echo "deb http://apt.llvm.org/focal llvm-toolchain-focal-9 main" | sudo tee -a /etc/apt/sources.list.d/llvm.list
        sudo apt-get update -y -qq
        sudo apt-get install -y -qq singular41 libgmp3-dev libgsl0-dev liblapack-dev clang-9 llvm-9 llvm-9-dev libllvm9

    - name: cache ~/.stack
      uses: actions/cache@v2.1.6
      env:
        cache-name: cache-stack-global
      with:
        path: ~/.stack
        key: ${{ runner.os }}-build-${{ matrix.ghc }}-${{ hashFiles('**/package.yaml') }}-${{ hashFiles('**/stack.yaml') }}-${{ hashFiles('**/stack.yaml.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.ghc }}
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Cache .stack-work
      uses: actions/cache@v2.1.6
      env:
        cache-name: cache-stack-local
      with:
        path: '**/.stack-work'
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.ghc }}-${{ hashFiles('**/package.yaml') }}-${{ hashFiles('**/stack.yaml') }}-${{ hashFiles('**/stack.yaml.lock') }}-${{ hashFiles('**/*.hs') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.ghc }}
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Setup Haskell
      uses: haskell/actions/setup@v1.2.1
      with:
        ghc-version: ${{matrix.ghc}}
        enable-stack: true
        stack-version: "2.7.1"
    - run: stack build --test --no-run-tests --haddock --no-haddock-deps
    - name: "Collect documents"
      run: |
        cp -r $(stack path --local-doc-root) docs
    - name: "Collect test exes"
      run: |
        mkdir -p test-bins/
        stack ide targets |& grep :test: | while read i; do
          PACK=$(echo "$i" | cut -d':' -f1);
          EXE=$(echo "$i" | cut -d':' -f3);
          cp $PACK/$(stack path --dist-dir)/build/$EXE/$EXE test-bins;
        done
    - uses: actions/upload-artifact@v2.2.3
      with:
        name: test-artifacts-${{ matrix.ghc }}
        path: 'test-bins/'
  
    - uses: actions/upload-artifact@v2.2.3
      name: upload docs
      with:
        name: doc-artifacts-${{ matrix.ghc }}
        path: 'docs/'
  
  test:
    needs:
    - build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ghc:
        - 8.10.7
        - 9.0.1
      fail-fast: false
    name: Test ${{ matrix.ghc }}
    env:
      STACK_YAML: stack-${{matrix.ghc}}.yaml
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies (apt)
      run: |
        sudo apt-get update -y -qq && sudo apt-get install -y -qq wget
        wget ftp://jim.mathematik.uni-kl.de/repo/extra/gpg && sudo apt-key add gpg && rm gpg
        echo 'Dir::Bin::Methods::ftp "ftp";' | sudo tee -a /etc/apt/apt.conf.d/99local-ftp
        sudo touch /etc/apt/sources.list.d/singular.list
        echo "deb ftp://jim.mathematik.uni-kl.de/repo/ubuntu20 focal main" | sudo tee -a /etc/apt/sources.list.d/singular.list
        echo "deb http://apt.llvm.org/focal llvm-toolchain-focal-9 main" | sudo tee -a /etc/apt/sources.list.d/llvm.list
        sudo apt-get update -y -qq
        sudo apt-get install -y -qq singular41 libgmp3-dev libgsl0-dev liblapack-dev clang-9 llvm-9 llvm-9-dev libllvm9

    - name: Download Test artifacts
      uses: actions/download-artifact@v2
      id: test-bins
      with:
        name: test-artifacts-${{ matrix.ghc }}
        path: test-bins
    - name: Setup Haskell
      uses: haskell/actions/setup@v1.2.1
      with:
        ghc-version: ${{matrix.ghc}}
        enable-stack: true
        stack-version: "2.7.1"
    - name: Run all Tests
      run: |
        ls ${{steps.test-bins.outputs.download-path}}
        stack ide targets |& grep :test: | while read i; do
          TEST_EXE=$(echo "$i" | cut -d':' -f3)
          echo "Testing: ${TEST_EXE}"
          chmod +x ${{steps.test-bins.outputs.download-path}}/${TEST_EXE}
          ${{steps.test-bins.outputs.download-path}}/${TEST_EXE} +RTS -N
        done

  document:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy Document
    strategy:
      matrix:
        ghc:
        - 8.10.7
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
      with:
        ref: gh-pages-devel

    - name: cache ~/.stack
      uses: actions/cache@v2.1.6
      env:
        cache-name: cache-stack-global-doc
      with:
        path: ~/.stack
        key: ${{ runner.os }}-doc-${{ matrix.ghc }}-${{ hashFiles('**/package.yaml') }}-${{ hashFiles('**/stack.yaml') }}-${{ hashFiles('**/stack.yaml.lock') }}
        restore-keys: |
          ${{ runner.os }}-doc-${{ env.cache-name }}-${{ matrix.ghc }}
          ${{ runner.os }}-doc-${{ env.cache-name }}-
          ${{ runner.os }}-doc-
    - name: Cache .stack-work
      uses: actions/cache@v2.1.6
      env:
        cache-name: cache-stack-local-doc
      with:
        path: '**/.stack-work'
        key: ${{ runner.os }}-doc-${{ env.cache-name }}-${{ matrix.ghc }}-${{ hashFiles('**/package.yaml') }}-${{ hashFiles('**/stack.yaml') }}-${{ hashFiles('**/stack.yaml.lock') }}-${{ hashFiles('**/*.hs') }}
        restore-keys: |
          ${{ runner.os }}-doc-${{ env.cache-name }}-${{ matrix.ghc }}
          ${{ runner.os }}-doc-${{ env.cache-name }}-
          ${{ runner.os }}-doc-

    - name: Setup Haskell
      uses: haskell/actions/setup@v1.2.1
      with:
        ghc-version: ${{matrix.ghc}}
        enable-stack: true
        stack-version: "2.7.1"
    
    - name: Build static site generator
      run: |
        stack build --fast
    - name: Download docs artifact
      uses: actions/download-artifact@v2
      with:
        name: doc-artifacts-${{ matrix.ghc }}
        path: 'docs/'
    - name: Generate Static site
      run: stack exec -- site build
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./_site
