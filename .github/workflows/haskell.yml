# Code generated by dhall-to-yaml.  DO NOT EDIT.
jobs:
  build:
    container: "ghcr.io/konn/computational-algebra/gha:0.7"
    "continue-on-error": "${{matrix.isHead}}"
    env:
      STACK_YAML: "stack-${{matrix.ghc}}.yaml"
    name: "Build ${{matrix.ghc}}"
    "runs-on": "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v2"
    - name: Cache ~/.stack
      uses: "actions/cache@v2"
      with:
        key: "${{runner.os}}-build-global-stack-${{matrix.ghc}}-${{ hashFiles('**/package.yaml','**/*.cabal') }}-${{ hashFiles(format('{0}', env.STACK_YAML)) }}"
        path: ~/.stack
        "restore-keys": |
          ${{runner.os}}-build-global-stack-${{matrix.ghc}}-${{ hashFiles('**/package.yaml','**/*.cabal') }}-
          ${{runner.os}}-build-global-stack-${{matrix.ghc}}-
    - name: "Cache **/.stack-work"
      uses: "actions/cache@v2"
      with:
        key: "${{runner.os}}-build-local-stack-${{matrix.ghc}}-${{ hashFiles('**/package.yaml','**/*.cabal') }}-${{ hashFiles(format('{0}', env.STACK_YAML)) }}-${{ hashFiles('**/*.hs','**/*.lhs') }}"
        path: "**/.stack-work"
        "restore-keys": |
          ${{runner.os}}-build-local-stack-${{matrix.ghc}}-${{ hashFiles('**/package.yaml','**/*.cabal') }}-${{ hashFiles(format('{0}', env.STACK_YAML)) }}-
          ${{runner.os}}-build-local-stack-${{matrix.ghc}}-${{ hashFiles('**/package.yaml','**/*.cabal') }}-
          ${{runner.os}}-build-local-stack-${{matrix.ghc}}-
    - name: Build
      run: "stack build --test --no-run-tests --haddock --no-haddock-deps"
    - name: Collect docs
      run: "cp -r $(stack path --local-doc-root) docs/"
    - name: Collect test exes
      run: |
        mkdir -p "test-bins/"
        stack ide targets 2>&1 | grep :test: | while read i; do
          PACK=$(echo "$i" | cut -d':' -f1);
          EXE=$(echo "$i" | cut -d':' -f3);
          cp "${PACK}/$(stack path --dist-dir)/build/${EXE}/${EXE}" "test-bins/";
        done
    - name: "Upload test-artifacts-${{ matrix.ghc }}"
      uses: "actions/upload-artifact@v2.2.3"
      with:
        name: "test-artifacts-${{ matrix.ghc }}"
        path: "test-bins/"
    - name: "Upload doc-artifacts-${{ matrix.ghc }}"
      uses: "actions/upload-artifact@v2.2.3"
      with:
        name: "doc-artifacts-${{ matrix.ghc }}"
        path: docs/
    strategy:
      "fail-fast": false
      matrix:
        ghc:
        - '8.10.7'
        - '9.0.2'
        include:
        - ghc: '9.2.1'
          isHead: true
        isHead:
        - false
  document:
    container: "ubuntu:20.04"
    name: Build Document
    needs:
    - build
    "runs-on": "ubuntu-20.04"
    steps:
    - uses: "actions/checkout@v2"
      with:
        ref: "gh-pages-devel"
    - name: Cache ~/.stack
      uses: "actions/cache@v2"
      with:
        key: "document-global-stack-${{ hashFiles(package.yaml,'**/*.cabal',stack.yaml) }}"
        path: ~/.stack
        "restore-keys": "document-global-stack-"
    - name: "Cache **/.stack-work"
      uses: "actions/cache@v2"
      with:
        key: "document-local-stack-${{ hashFiles(package.yaml,'**/*.cabal',stack.yaml) }}-${{ hashFiles('**/*.hs') }}"
        path: "**/.stack-work"
        "restore-keys": |
          document-local-stack-${{ hashFiles(package.yaml,'**/*.cabal',stack.yaml) }}-
          document-local-stack-
    - uses: "haskell/actions/setup@v1"
      with:
        "enable-stack": 'true'
        "stack-version": '2.7.1'
    - name: Build static site generator
      run: "stack build --fast"
    - id: "download-docs"
      uses: "actions/download-artifact@v2"
      with:
        name: "doc-artifacts-${{ matrix.ghc }}"
        path: docs/
    - name: Generate site
      run: "stack exec -- site build"
    - name: Deploy GitHub Pages
      uses: "peaceiris/actions-gh-pages@v3"
      with:
        github_token: "${{ secrets.GITHUB_TOKEN }}"
        publish_dir: ./_site
    strategy:
      matrix:
        ghc:
        - '8.10.7'
  test:
    container: "ghcr.io/konn/computational-algebra/gha:0.7"
    "continue-on-error": "${{matrix.isHead}}"
    env:
      STACK_YAML: "stack-${{matrix.ghc}}.yaml"
    name: "Test ${{matrix.ghc}}"
    needs:
    - build
    "runs-on": "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v2"
    - id: "test-bins"
      uses: "actions/download-artifact@v2"
      with:
        name: "test-artifacts-${{ matrix.ghc }}"
        path: "test-bins/"
    - name: Run all tests
      run: |
        ls "${{steps.test-bins.outputs.download-path}}"
        stack ide targets 2>&1 | grep :test: | while read i; do
          TEST_EXE=$(echo "$i" | cut -d':' -f3)
          echo "Testing: ${TEST_EXE}"
          chmod +x "${{steps.test-bins.outputs.download-path}}/${TEST_EXE}"
          "${{steps.test-bins.outputs.download-path}}/${TEST_EXE}" +RTS -N
        done
    strategy:
      "fail-fast": false
      matrix:
        ghc:
        - '8.10.7'
        - '9.0.2'
        include:
        - ghc: '9.2.1'
          isHead: true
        isHead:
        - false
name: Build
'on':
- pull_request
