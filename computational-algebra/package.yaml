name:                computational-algebra
version:             0.6.0.0
github:              "konn/computational-algebra"
license:             BSD3
author:              "Hiromi ISHII"
maintainer:          "konn.jinro _at_ gmail.com"
copyright:           "2018 (c) Hiromi ISHII"

extra-source-files:
- README.md
- ChangeLog.md

tested-with: |
  GHC == 8.4.3, GHC == 8.6.5, GHC == 8.8.2, GHC == 8.10.1

# Metadata used when publishing your package
# synopsis:            Short description of your package
category:            Math

description:         Please see the project Web Site at <https://konn.github.io/computational-algebra>


flags:
  examples:
    default: false
    manual:  true
    description: |
      Whether to build example binaries (default: False)

  profile:
    default: false
    manual:  true
    description: |
      Whether to build profiling binaries (default: False)

dependencies:
- algebraic-prelude
- base >= 4.7 && < 5
- halg-core
- halg-core-test
- halg-polyn-parser
- halg-polynomials
- halg-galois-fields
- halg-matrices
- halg-algorithms
- halg-factor
- halg-algebraic
- MonadRandom
- algebra
- containers
- singletons
- sized
- type-natural

library:
  source-dirs: src
  ghc-options:  -Wall
  when:
    - condition: flag(profile)
      ghc-options:
      - -fprof-auto-exported

_exe-defaults: &exe-defaults
  source-dirs: examples
  default-extensions:
  - DataKinds
  - NoImplicitPrelude
  ghc-options:
  - -Wall
  - -threaded
  - -rtsopts
  - -with-rtsopts=-N

_example-cond: &example-cond
  <<:   *exe-defaults
  when:
    - condition: flag(examples)
      then: 
        buildable: true
      else:
        buildable: false
  dependencies:
  - computational-algebra
  - deepseq
  - algebraic-prelude
  - halg-polynomials
  - convertible
  - vector
  - singletons
  - reflection
  - matrix
  - hmatrix

_profile-cond: &profile-cond
  <<:   *exe-defaults
  dependencies:
  - computational-algebra
  - deepseq
  - algebraic-prelude
  - halg-polynomials
  - hspec-smallcheck == 0.5.*
  when:
    - condition: flag(profile)
      then: 
        buildable: true
      else:
        buildable: false
  ghc-options:
  - -caf-all
  - -auto-all
  - -rtsopts
  - -eventlog
  - -prof
  - -fprof-auto-exported
  
_examples: &examples
  algebraic:
    <<:   *example-cond
    main: algebraic.hs
  sandpit-poly:
    <<:   *example-cond
    main: sandpit-poly.hs
  quotient:
    <<:   *example-cond
    main: quotient.hs

_profiles: &profiles
  groebner-prof:
    <<: *profile-cond
    main: groebner-prof.hs
  hensel-prof:
    <<: *profile-cond
    main: hensel-prof.hs

executables:
  <<: *examples
  <<: *profiles

_bench-common: &bench-common
    dependencies:
    - halg-core-test
    - constraints
    - containers
    - gauge
    - reflection
    - deepseq
    - lens
    - vector
    - matrix
    - parallel
    - ghc-typelits-presburger
    - equational-reasoning
    - process
    - sized
    - computational-algebra
    - QuickCheck
    - smallcheck
    - quickcheck-instances
    source-dirs:
    - bench
    - share
    ghc-options:
    - -O2
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N

benchmarks:
  unipol-bench:
    <<: *bench-common
    main: unipol-bench.hs
    other-modules: []
  normal-bench:
    <<: *bench-common
    main: bench.hs
    other-modules: []
  quotient-bench-randomized:
    <<: *bench-common
    buildable: false
    main: quotient-bench-randomized.hs
    other-modules:
    - Utils
  solve-bench:
    buildable: false
    <<: *bench-common
    main: solve.hs
    other-modules:
    - Utils
  coercion-bench:
    <<: *bench-common
    other-modules: []
    main: coercion.hs
  unipol-mult-bench:
    <<: *bench-common
    buildable: false
    main: unipol-mult.hs
    other-modules: []
  unipol-div-bench:
    <<: *bench-common
    other-modules: []
    main: unipol-div.hs
